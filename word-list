#!/bin/sh
#
# Gera lista de palavras a partir de arquivos de entrada. Útil para
# criar dicionários que podem ser usados por exemplo pelo vim.
# <https://github.com/jpaulogg/bin>
#------------------------------------------------------------------------------
usage() {
	echo "Uso: word-list [-f file1 file2 ...] [-d dir1 dir2 ...] [-o output file]

Gera lista de palavras a partir de arquivo(s) de entrada.  Defina ao menos uma entrada
válida com as opções '-f' e/ou '-d'. Arquivos dos diretórios definidos pela opção '-d'
serão incluidos recursivamente.

	-h, --help
	-f, --files        lista de arquivos de entrada
	-d, --directories  lista de diretórios de entrada
	-o, --output       saída padrão para o arquivo $PWD/word-list.txt"
}
		
word_list() {
	sed 's/[[:punct:][:digit:]]//g' $1 |\
	sed 's/\s/\n/g'
}
	
input=''                # lista de arquivos gerada a partir das opções -f e -d
temp=$(mktemp)          # arquivo temporário
output="word-list.txt"  # destino padrão de saída

# loop para preencher a variável $input com o texto dos arquivos
while [ $# -gt 0 ]; do
	case "$1" in
	-h|--help)
		usage
		exit 0
		;;
	-f|--files)
		shift
		while [ -f "$1" ]; do
			input="${input}$1\n"
			shift
		done
		;;
	-d|--dirs)
		shift
		read -p "sufixo/padrão de busca (e.g. '.sh', '[padrão]', ''): " sufix
		while [ -d "$1" ]; do
			input="${input}$(find "$1" -type f -iname "*$sufix" -print)\n"
			shift
		done
		;;
	-o|--output)
		output="$2"
		shift 2
		;;
	*)
		echo "\n\033[31mOpções inválidas de entrada\033[0m.\n$(usage)."
		exit 1
		;;
	esac
done

echo "$input" | while read f; do
	word_list "$f" >> $temp
done
sort -u $temp >> "$output"

exit 0
